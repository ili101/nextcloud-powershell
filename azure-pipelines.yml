# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'
    # - master
    # - releases/*
  paths:
    exclude:
    - README.md
    - CHANGELOG.md

jobs:
  - job: Windows
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          for ($i = 0; $i -lt 10; $i++) {
            "System_JobName $env:System_JobName"
            "System_JobDisplayName $env:System_JobDisplayName"
            "Agent_JobName $env:Agent_JobName"
            sleep 5
          }

  - job: WindowsPSCore
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          for ($i = 0; $i -lt 10; $i++) {
            "System_JobName $env:System_JobName"
            "System_JobDisplayName $env:System_JobDisplayName"
            "Agent_JobName $env:Agent_JobName"
            sleep 5
          }

  - job: Ubuntu
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
            "System_JobName $env:System_JobName"
            "System_JobDisplayName $env:System_JobDisplayName"
            "Agent_JobName $env:Agent_JobName"

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
            "System_JobName $env:System_JobName"
            "System_JobDisplayName $env:System_JobDisplayName"
            "Agent_JobName $env:Agent_JobName"
        pwsh: true
    - bash: echo $(System_JobName)

  - job: macOS
    pool:
      vmImage: 'macOS-latest'

    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          for ($i = 0; $i -lt 10; $i++) {
            "System_JobName $env:System_JobName"
            "System_JobDisplayName $env:System_JobDisplayName"
            "Agent_JobName $env:Agent_JobName"
            sleep 5
          }

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                
                Write-Host "Hello World"
              pwsh: true